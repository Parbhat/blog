<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Parbhat Puri</title><link href="https://parbhatpuri.com/" rel="alternate"></link><link href="https://parbhatpuri.com/feeds/opensource.atom.xml" rel="self"></link><id>https://parbhatpuri.com/</id><updated>2015-08-02T18:00:00+05:30</updated><entry><title>Git workflow to contribute to an Open Source project</title><link href="https://parbhatpuri.com/git-workflow-to-contribute-to-an-open-source-project.html" rel="alternate"></link><updated>2015-08-02T18:00:00+05:30</updated><author><name>Parbhat Puri</name></author><id>tag:parbhatpuri.com,2015-08-02:git-workflow-to-contribute-to-an-open-source-project.html</id><summary type="html">&lt;p&gt;Open Source is the way by which great projects are built. This is made possible by people like you who give their precious time to the community and great stuff is built. So you may be a beginner and wants to contribute to Open Source projects. This article will guide you to contribute to Open Source projects hosted on Collaboration platform &lt;a target="_blank" href="https://github.com"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="Github" src="https://i.imgur.com/IXBmJj4.jpg" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;This summer I was working as an Intern with &lt;a target="_blank" href="http://chrisdev.com/"&gt;ChrisDev&lt;/a&gt;. The company is one of the corporate members of the &lt;a target="_blank" href="https://www.djangoproject.com/foundation/corporate-members/"&gt;Django&lt;/a&gt; Web Framework. The company works with open source technologies like Python/Django, Pandas, Postgresql, Ansible, Linux, etc. The company has a number of open source projects hosted on &lt;a target="_blank" href="https://github.com/chrisdev"&gt;Github&lt;/a&gt; and Pypi. I worked on a cookiecutter in Django. The project Url is- &lt;a target="_blank" href="https://github.com/chrisdev/wagtail-cookiecutter-foundation"&gt;https://github.com/chrisdev/wagtail-cookiecutter-foundation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this article, I will explain the workflow used by me to contribute to this project. The same workflow is applicable to almost any project on Github. &lt;/p&gt;
&lt;h2&gt;Git and Github&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;Before continuing I want to clarify the difference between Git and Github. Git is a version control system(VCS) which is a tool to manage the history of our Source Code. GitHub is a hosting service for Git projects.&lt;/p&gt;
&lt;p&gt;I assume you have created an account on &lt;a target="_blank" href="https://github.com/join"&gt;Github&lt;/a&gt; and installed &lt;a target="_blank" href="http://git-scm.com/downloads"&gt;Git&lt;/a&gt; on your System.&lt;/p&gt;
&lt;p&gt;Now tell Git your name and E-mail (used on Github) address.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git config --global user.name &lt;span class="s2"&gt;&amp;quot;YOUR NAME&amp;quot;&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; git config --global user.email &lt;span class="s2"&gt;&amp;quot;YOUR EMAIL ADDRESS&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is an important step to mark your commits to your name and email.&lt;/p&gt;
&lt;h2&gt;Fork a Project&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;You can use github explore - &lt;a target="_blank" href="https://github.com/explore"&gt;https://github.com/explore&lt;/a&gt; to find a project that interests you and match your skills. Once you find your cool project to workon, you can make a copy of project to your account. This process is called forking a project to your Github account. On Upper right side of project page on Github, you can see - &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="Github-fork" src="https://i.imgur.com/P0n6f97.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Click on fork to create a copy of project to your account. This creates a separate copy for you to workon.&lt;/p&gt;
&lt;h2&gt;Finding a feature or bug to workon&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;Open Source projects always have something to workon and improves with each new release. You can see the issues section to find something you can solve or report a bug. The project managers always welcome new contributors and can guide you to solve the problem. You can find issues in the right section of project page.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="github-issues" src="https://i.imgur.com/czVjpS7.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;Clone the forked project&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;You have forked the project you want to contribute to your github account. To get this project on your development machine we use clone command of git.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git clone https://github.com/&amp;lt;your-account-username&amp;gt;/&amp;lt;your-forked-project&amp;gt;.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you have the project on your local machine.&lt;/p&gt;
&lt;h2&gt;Add a remote (upstream) to original project repository&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;Remote means the remote location of project on Github. By cloning, we have a remote called origin which points to your forked repository. Now we will add a remote to the original repository from where we had forked.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; &amp;lt;your-forked-project-folder&amp;gt;
&lt;span class="gp"&gt;$&lt;/span&gt; git remote add upstream https://github.com/&amp;lt;author-account-username&amp;gt;/&amp;lt;project&amp;gt;.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You will see the benefits of adding remote later.&lt;/p&gt;
&lt;h2&gt;Synchronizing your fork&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;Open Source projects have a number of contributors who can push code anytime. So it is necessary to make your forked copy equal with the original repository. The remote added above called Upstream helps in this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout master
&lt;span class="gp"&gt;$&lt;/span&gt; git fetch upstream
&lt;span class="gp"&gt;$&lt;/span&gt; git merge upstream/master
&lt;span class="gp"&gt;$&lt;/span&gt; git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last command pushes the latest code to your forked repository on Github. The origin is the remote pointing to your forked repository on github.&lt;/p&gt;
&lt;h2&gt;Create a new branch for a feature or bugfix&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;Normally, all repositories have a master branch which is considered to remain stable and all new features should be made in a separate branch and after completion merged into master branch. So we should create a new branch for our feature or bugfix and start working on the issue.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout -b &amp;lt;feature-branch&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create a new branch out of master branch. Now start working on the problem and commit your changes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add --all
&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;&amp;lt;commit message&amp;gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first command adds all the files or you can add specific files by removing -a and adding the file names. The second command gives a message to your changes so you can know in future what changes this commit makes. If you are solving an issue on original repository, you should add the issue number like #35 to your commit message. This will show the reference to commits in the issue.&lt;/p&gt;
&lt;h2&gt;Rebase your feature branch with upstream&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;It can happen that your feature takes time to complete and other contributors are constantly pushing code. After completing the feature your feature branch should be rebase on latest changes to upstream master branch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git checkout &amp;lt;feature-branch&amp;gt;
&lt;span class="gp"&gt;$&lt;/span&gt; git pull --rebase upstream master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you get the latest commits from other contributors and check that your commits are compatible with the new commits. If there are any conflicts solve them.&lt;/p&gt;
&lt;h2&gt;Squashing Your Commits&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;You have completed the feature, but you have made a number of commits which make less sense. You should squash your commits to make good commits.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git rebase -i HEAD~5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will open an editor which will allow you to squash the commits.&lt;/p&gt;
&lt;h2&gt;Push code and create a Pull request&lt;/h2&gt;
&lt;hr&gt;

&lt;p&gt;Till this point you have a new branch with the feature or bugfix you want in the project you had forked. Now push your new branch to your remote fork on github.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git push origin &amp;lt;feature-branch&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you are ready to help the project by opening a pull request means you now tell the project managers to add the feature or bugfix to original repository. You can open a pull request by clicking on green icon - &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="github-pullrequest" src="https://i.imgur.com/aGaqAD5.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Remember your upstream base branch should be master and source should be your feature branch. Click on create pull request and add a name to your pull request. You can also describe your feature.&lt;/p&gt;
&lt;p&gt;Awesome! You have made your first contribution. If you have any doubts please let me know in the comments.&lt;/p&gt;
&lt;h2&gt;Be Open!&lt;/h2&gt;</summary><category term="opensource"></category><category term="web"></category><category term="2015"></category><category term="Programming"></category><category term="git"></category></entry><entry><title>Why you should Open Source your code?</title><link href="https://parbhatpuri.com/why-you-should-open-source-your-code.html" rel="alternate"></link><updated>2015-05-27T18:00:00+05:30</updated><author><name>Parbhat Puri</name></author><id>tag:parbhatpuri.com,2015-05-27:why-you-should-open-source-your-code.html</id><summary type="html">&lt;p&gt;Open source your code is the best way to improve your coding Skills. I have seen people who are reluctant to share their code with others because they know their code is messy. By Open Sourcing your code you learn the best practices in Developing higher quality code. In this article, I will share the reasons why Open source your code is the best practice that every Developer should follow. Below is the Github Open Source graph of a Famous Open Source Contributor.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="Github-Graph" src="https://i.imgur.com/Exp1j8B.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;The following points highlight the importance of Open Source Code.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open Source improves your coding skills. The code that is only open to your eyes can be more error prone. When you put your code in public, you test it thoroughly and improve it with recommendations from your team or others.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Source gives you a good reason to write Good Quality code rather than messy code that is just working and can be broken easily.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you open source some cool project, then you get reviews and contributions from other great Developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are a company who is Open Source his code, then You can attract Good Developers to work with you. Great Developers love Open Source World.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have used many Open Source technologies in your projects like Python, Linux, NodeJS, MongoDB, MySQL. By going Open Source you share your work with the Open Source Community.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other Developers can also learn from your Good Quality code and improve their skills.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So go ahead and create your profile on &lt;a href="https://github.com" target="_blank"&gt;https://github.com&lt;/a&gt; or any other social coding site and Open Source your projects and start something cool that can benefit the whole Community.&lt;/p&gt;</summary><category term="opensource"></category><category term="web"></category><category term="2015"></category><category term="Programming"></category></entry></feed>