<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Parbhat Puri</title><link>http://www.parbhatpuri.com/</link><description></description><atom:link href="http://www.parbhatpuri.com/feeds/parbhat-puri.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 27 Nov 2014 20:00:00 +0530</lastBuildDate><item><title>VirtualenvWrapper on top of Virtualenv</title><link>http://www.parbhatpuri.com/virtualenvwrapper-on-top-of-virtualenv.html</link><description>&lt;h2&gt;What is Virtualenv?&lt;/h2&gt;
&lt;p&gt;Virtualenv is a tool for creating isolated Python environments which means you can have separate python environments for your projects.&lt;/p&gt;
&lt;p&gt;Lets keep it simple suppose you are working on a project which depends on any python package like &lt;strong&gt;Django == 1.6.5&lt;/strong&gt;. And wow the new version &lt;strong&gt;Django == 1.7&lt;/strong&gt; is launched with some cool features like migrations etc. You want to start a new project on Django == 1.7 but wait how you are gonna do that?&lt;/p&gt;
&lt;h4&gt;How to maintain two separate versions of Django.&lt;/h4&gt;
&lt;p&gt;The answer is simple use &lt;strong&gt;Virtualenv&lt;/strong&gt; to create separate python environments for them. Those two environments will be totally separated from each other as well as from the globally installed packages.&lt;/p&gt;
&lt;h4&gt;Installing Virtualenv&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
The easiest way to install virtualenv is to use &lt;a href="http://pip.readthedocs.org/en/latest"&gt;pip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ [sudo] pip install virtualenv&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Usage&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
&lt;strong&gt;To create a Virtual environment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ virtualenv ENV_NAME&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; Activate the Virtual environment&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ source bin/activate&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h2&gt;But wait where is &lt;strike&gt;Virtualenv&lt;/strike&gt; VirtualenvWrapper&lt;/h2&gt;
&lt;h4&gt;Virtualenv Wrapper is the Hero&lt;/h4&gt;
&lt;p&gt;virtualenvwrapper is the extension to virtualenv. It makes the process of creating and managing virtual environments smoother and easier. It provides a set of commands which helps in managing multiple environments easily and remove conflicts.&lt;/p&gt;
&lt;h4&gt;Installing Virtualenvwrapper&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
As usual the best way to install any python package is to use pip.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ pip install virtualenvwrapper&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Some configuration&lt;/strong&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ export WORKON_HOME=~/Envs&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ mkdir -p $WORKON_HOME&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ source /usr/local/bin/virtualenvwrapper.sh&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Creating a Virtual Environment using Virtualenv Wrapper&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
&lt;center&gt;&lt;code&gt;$ mkvirtualenv env_name&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;div class="imga"&gt;&lt;img src="http://i.imgur.com/eCXWgI8.png"&gt;&lt;/div&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Activating the Virtual environment&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
&lt;center&gt;&lt;code&gt;$ workon env_name&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;You can see the changes before the username. This indicates that your virtual
environment is activated.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="virtualenv" src="http://i.imgur.com/MytTSyR.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Installing and listing packages using pip&lt;/h4&gt;
&lt;hr&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt="virtualenv" src="http://i.imgur.com/v0iftDF.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Deactivate Environment&lt;/h4&gt;
&lt;hr&gt;

&lt;p&gt;&lt;center&gt;&lt;code&gt;$ deactivate&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Great we have come to the end of this post.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;virtualenv is a great tool for any python project and virtualenvwrapper makes the process easier. For more details refer to their Official Documentation - &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://virtualenv.readthedocs.org/en/latest/"&gt;http://virtualenv.readthedocs.org/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest"&gt;http://virtualenvwrapper.readthedocs.org/en/latest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Oh I forget something&lt;/h2&gt;
&lt;p&gt;&lt;center&gt;&lt;code&gt;$ pip install have-a-great-development&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Thu, 27 Nov 2014 20:00:00 +0530</pubDate><guid>tag:www.parbhatpuri.com,2014-11-27:virtualenvwrapper-on-top-of-virtualenv.html</guid><category>python</category><category>virtualenv</category><category>Programming</category></item><item><title>Why use Linux for Python development?</title><link>http://www.parbhatpuri.com/why-use-linux-for-python-development.html</link><description>&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; is a high level programming language. The development time is precious so using Linux based operating systems makes the development easier and fun.&lt;/p&gt;
&lt;p&gt;I had been using windows for a couple of months for my &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; Projects. Initially during my learning stage windows was working fine for me but as the knowledge and project size grew I faced many difficulties which I want to summarize here. I am not supporting any operating system here but want every Developer to understand the reasons for switching. For following reasons every Developer should switch to Linux based OS like &lt;a href="http://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt; for Python Development.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Some packages are &lt;strong&gt;not&lt;/strong&gt; available for windows, if they are available it will be difficult to configure them in your projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are working on a project in Django, flask and other frameworks you would like to &lt;strong&gt;deploy&lt;/strong&gt; it so it will be available for public to see. In more than 90% of the cases your deployment environment will be Linux based so its best to test your application locally on the same environment as in deployment because here you are allowed to make mistakes and improve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Almost every tutorial on Python use Linux based systems like Ubuntu. These tutorials are by experts so it's good to follow best practices used by experienced developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When your projects get complex its very easy to find Dependencies for your projects like extensions, libraries etc. in Linux based OS. In Windows you have to search for the right site to download the package and go through the hassle of installation and configuration. Sometimes the search for packages takes a lot of time, in Linux its just &lt;em&gt;&lt;strong&gt;"apt-get"&lt;/strong&gt;&lt;/em&gt; (or similar).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python comes pre-installed in Ubuntu and other versions so no need to install python on your system.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-linux" src="http://i.imgur.com/lhlh6Lx.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Switch to linux and use apt-get to install your packages&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Happy Coding.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Sat, 22 Nov 2014 19:40:00 +0530</pubDate><guid>tag:www.parbhatpuri.com,2014-11-22:why-use-linux-for-python-development.html</guid><category>python</category><category>linux</category><category>windows</category><category>ubuntu</category><category>Programming</category></item><item><title>Django (Python Web Framework) Tutorials</title><link>http://www.parbhatpuri.com/django_tutorials.html</link><description>&lt;h2&gt;Django Tutorials&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.djangoproject.com" target="_blank"&gt;Django&lt;/a&gt; is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.6/intro/tutorial01/" target="_blank"&gt;Official Tutorial &lt;/a&gt; - It is the Official tutorial of django on the django site.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tangowithdjango.com/" target="_blank"&gt;Tango with Django&lt;/a&gt; - A Good Introduction to the django terminology.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gettingstartedwithdjango.com" target="_blank"&gt;Getting Started With Django&lt;/a&gt; - A video series to upgrade  from beginner to pro.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twoscoopspress.org" target="_blank"&gt;Two Scoops of Django&lt;/a&gt; - A book covering the best practices in Django.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Fri, 18 Jul 2014 19:30:00 +0530</pubDate><guid>tag:www.parbhatpuri.com,2014-07-18:django_tutorials.html</guid><category>python</category><category>django</category><category>web</category></item></channel></rss>