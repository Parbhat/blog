<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Parbhat Puri</title><link>https://parbhatpuri.com/</link><description></description><atom:link href="https://parbhatpuri.com/feeds/parbhat-puri.rss.xml" rel="self"></atom:link><lastBuildDate>Sat, 04 Apr 2015 18:00:00 +0530</lastBuildDate><item><title>Why you should learn Flask before Django?</title><link>https://parbhatpuri.com/why-you-should-learn-flask-before-django.html</link><description>&lt;p&gt;Recently I explored &lt;a href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt; and loved the simplicity and power of this Microframework. I learned Django as my first Python Web framework, but now I realise that Flask should be the first &lt;a href="https://python.org"&gt;Python&lt;/a&gt; web framework that everyone should learn while entering into the field of Web Development with Python.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="Flask-logo" src="https://i.imgur.com/Os2jtnk.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Django is a full stack framework with the batteries included approach making it easy for developers to dive it into Web Applications. But for beginners, for learning the basics of &lt;a href="http://wsgi.readthedocs.org/en/latest/index.html"&gt;WSGI&lt;/a&gt; and Python web development and of dynamic web development, I do not know of any web framework that gives a better introduction to the concepts underlying it than Flask.&lt;/p&gt;
&lt;p&gt;Starting with Flask is so simple that a &lt;em&gt;hello World&lt;/em&gt; Web Application looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# from http://flask.pocoo.org/ tutorial&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app.route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# take note of this decorator syntax, it&amp;#39;s a common pattern&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With only 7 lines of code you have your Web Application running with Flask. From the above &lt;em&gt;Hello World&lt;/em&gt; web application, a developer with no experience building Python Web applications can get Hacking immediately. You should learn flask because - &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy to understand&lt;/li&gt;
&lt;li&gt;Extensive documentation&lt;/li&gt;
&lt;li&gt;Built in development server and debugger&lt;/li&gt;
&lt;li&gt;Supports REST&lt;/li&gt;
&lt;li&gt;Code base small you can check the source code.&lt;/li&gt;
&lt;li&gt;No ORM so you can use SQLAlchemy or storm&lt;/li&gt;
&lt;li&gt;Uses Jinja2 templating&lt;/li&gt;
&lt;li&gt;Support other templates like genshi, mako&lt;/li&gt;
&lt;li&gt;Integrated unit testing support&lt;/li&gt;
&lt;li&gt;support for secure cookies (client side sessions)&lt;/li&gt;
&lt;li&gt;Module level integration&lt;/li&gt;
&lt;li&gt;100% WSGI compliant.&lt;/li&gt;
&lt;li&gt;Integration with gevent, twisted, tornado is possible.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Why it should be your first Python Web Framework?&lt;/h2&gt;
&lt;hr&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flask is more Pythonic than Django because the code of flask Web Application in most cases is more explicit than the Django Web Application code. So it is easy for Python coders to pick up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Beginners can learn a lot from the well documented Source Code.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flask does include everything you need to start building something more complex than the above &lt;em&gt;Hello World&lt;/em&gt; app. It integrates a templating engine (Jinja2) for you so you don't have to decide whether you would be better off using Genshi, Cheetah or Mako (though you could use). &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The extra work at start to choose components for Flask apps yields more flexibility for developers whose use case doesn't fit a standard ORM, or who need to interoperate with different workflows or templating systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Django is a large framework which includes everything, whether you require it or not. So for smaller application Flask can give more performance. &lt;a href="http://httpbin.org/"&gt;httpbin&lt;/a&gt; is a smaller application built with Flask.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flask also scales well. Pinterest uses Flask for their API. The API Handles over 12 billion requests per day, all in Flask. More information on How Pinterest uses Flask can be found on &lt;a href="https://www.quora.com/What-challenges-has-Pinterest-encountered-with-Flask/answer/Steve-Cohen" target="_blank"&gt; Quora. &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, New Python developers should try Microframeworks like Flask before moving to large Frameworks like Django. You should definitely use Django after learning the small pieces of Web Applications.&lt;/p&gt;
&lt;h2&gt;Learning Resources&lt;/h2&gt;
&lt;hr&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="http://flask.pocoo.org/docs/0.10/" target="_blank"&gt; Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world" target="_blank"&gt;The Flask-Mega Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://exploreflask.com/" target="_blank"&gt;Explore Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.tutsplus.com/tutorials/an-introduction-to-pythons-flask-framework--net-28822" target="_blank"&gt;Tuts+ - An Introduction to Pythonâ€™s Flask Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://maximebf.com/blog/2012/10/building-websites-in-python-with-flask/#.VR-rV-mUfeS" target="_blank"&gt;Building websites in Python with Flask&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/course/ud088" target="_blank"&gt;Udacity - Full Stack Foundations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.miguelgrinberg.com/post/designing-a-restful-api-with-python-and-flask" target="_blank"&gt;Designing a RESTful API with Python and Flask&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Sat, 04 Apr 2015 18:00:00 +0530</pubDate><guid>tag:parbhatpuri.com,2015-04-04:why-you-should-learn-flask-before-django.html</guid><category>flask</category><category>django</category><category>python</category><category>web</category><category>2015</category><category>Programming</category></item><item><title>What is an API?</title><link>https://parbhatpuri.com/what-is-an-api.html</link><description>&lt;p&gt;API word has become so common on the web that you find it everywhere from technical blogs to books. I am sure you have heard about Google Maps API, Facebook Graph API, Twitter API. The defination of an API is - &lt;/p&gt;
&lt;p&gt;An application programming interface (API) is a particular set of instructions that programs can follow to communicate with each other. It serves as an interface between different programs and facilitates their interaction, similar to the way the user interface facilitates interaction between humans and computers.&lt;/p&gt;
&lt;p&gt;So what does this means? Suppose I am working on a Web Application and I want to use services of other applications on the web. APIs provides an interface to talk to other applications with our application. For example, Google Maps API allows to Access information about establishments, geographic locations, or prominent points of interest. Facebook Graph API allows us to extend the features provided by facebook to suit our needs, Ex - To Calculate number of likes that are common to a post and page, Mass Responding to Posts on Your Timeline.&lt;/p&gt;
&lt;p&gt;Almost all of the popular services on the web have their APIs available to the developers so that they can build their applications on top it.&lt;/p&gt;
&lt;p&gt;Some of the most popular APIs are :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/maps/" target="_blank"&gt;Google Maps API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/youtube/" target="_blank"&gt;YouTube APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.flickr.com/services/api/" target="_blank"&gt;Flickr API:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.twitter.com/" target="_blank"&gt;Twitter APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html" target="_blank"&gt;Amazon Product Advertising API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;APIs allows developers to integrate remote applications with their own applications. Thus reducing the efforts to write every part of application from scratch. For example, when we purchase something from a website by entering our credit card information, the website uses API to connect to remote application to check whether the information provided by you is correct. Once payment is confirmed, the remote application sends a response to the website that the payment is received and the product can be sold.&lt;/p&gt;
&lt;p&gt;So, there are number of APIs available on the web waiting for you to use them. Find APIs according to your needs and integrate them in your next Cool Application.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Sat, 14 Mar 2015 18:00:00 +0530</pubDate><guid>tag:parbhatpuri.com,2015-03-14:what-is-an-api.html</guid><category>api</category><category>angularjs</category><category>2015</category><category>Programming</category></item><item><title>AngularJS Superhero of Single-Page Application (SPA)</title><link>https://parbhatpuri.com/angularjs-superhero-of-single-page-application.html</link><description>&lt;p&gt;AngularJS is the Superheroic JavaScript MVW Framework for enhancing HTML for Web Apps.
&lt;center&gt;&lt;img alt="Angular-JS-logo" src="https://angularjs.org/img/AngularJS-large.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Today's Web Apps are not that Simple, they should offer more-native-app-like experience to the user. The Web Application should not reload the whole page whenever a user request something. First we have to familiar ourself with the concept of Single page application.&lt;/p&gt;
&lt;p&gt;A single-page application (SPA), is a web application that fits on a single web page with the goal of providing a 
more fluid user experience similar to a desktop application. In a SPA, either all necessary code â€“ HTML, 
JavaScript, and CSS â€“ is retrieved with a single page load, or the appropriate resources are dynamically loaded 
with technologies like AJAX and added to the page as necessary, usually in response to user actions. The page does 
not reload at any point in the process, nor does control transfer to another page. Interaction with the single 
page application often involves dynamic communication with the web server behind the scenes.&lt;/p&gt;
&lt;h3&gt;Now, how angularJS fits itself into Single Page Application concept.&lt;/h3&gt;
&lt;p&gt;AngularJS also known as angular is an Open Source Web Application Framework maintained by &lt;strong&gt;Google&lt;/strong&gt;. It helps in
creating rich Internet Applications which are easy to maintain and test. Angular works by first reading the HTML
page, which has embedded into it additional custom tag attributes. Those attributes are interpreted as 
directives telling Angular to bind input or output parts of the page to a model that is represented by standard 
JavaScript variables. The values of those JavaScript variables can be manually set within the code, or retrieved
from static or dynamic JSON resources.&lt;/p&gt;
&lt;p&gt;HTML was not designed for dynamic views, but it is great for declaring static documents. Angular helps to extend
HTML and gives behaviour to HTML which helps in declaring dynamic views in web-applications.&lt;/p&gt;
&lt;p&gt;In my Future posts I will discuss the features of angular like directives, Controllers, Models, Routes, Factories, services etc. The following picture helps to understand the power of angular.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="Angular-JS" src="https://i.imgur.com/U87M5vo.png" /&gt;&lt;/center&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Fri, 30 Jan 2015 18:00:00 +0530</pubDate><guid>tag:parbhatpuri.com,2015-01-30:angularjs-superhero-of-single-page-application.html</guid><category>Javascript</category><category>angularjs</category><category>2015</category><category>Programming</category></item><item><title>Skills Essential for a Front End Web Developer in 2015</title><link>https://parbhatpuri.com/skills-essential-for-a-front-end-web-developer-in-2015.html</link><description>&lt;p&gt;Front End Web Developers are in great demand in 2015 but with the emergence of new devices and technologies their skills requirement has increased so I am laying out a checklist for your Front End Development skills. These skills will help you to land a job as a Front End Developer in 2015.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Front-End-Developer-needed" src="https://i.imgur.com/U1Iev4X.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;In the early days of the Internet only Html, CSS and some Javascript were demanded from a Front End Web Developer but in the current scenario, these skills are &lt;strong&gt;not&lt;/strong&gt; enough to call yourself a Good Front End Web Developer. The following skills are in great demand and you must include them in your skills set.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;Responsive Web Design&lt;/li&gt;
&lt;li&gt;CSS Frameworks&lt;/li&gt;
&lt;li&gt;Javascript Frameworks&lt;/li&gt;
&lt;li&gt;Version Control&lt;/li&gt;
&lt;li&gt;Web Performance&lt;/li&gt;
&lt;li&gt;Browser Development tools&lt;/li&gt;
&lt;li&gt;Building and Automation tools&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;Soft skills&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/user/learncodeacademy" target="_blank"&gt;learncode.acedemy&lt;/a&gt; in his &lt;a href="https://www.youtube.com/watch?v=zXqs6X0lzKI" target="_blank"&gt;video&lt;/a&gt; gives a graphical presentation of above skills.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://i.imgur.com/EB3TIdK.png" target="_blank"&gt;&lt;center&gt;&lt;img alt="skills-graph" src="https://i.imgur.com/EB3TIdK.png" /&gt;&lt;/center&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now I will give you a brief description of the above skills.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt; - It is the structural part of the web. It tells the browser the elements in the website, links to css and javascript files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt; - Cascading style sheets makes the web beautiful. It is responsible for fonts, colors, images and positioning of different elements on the websites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Javascript&lt;/strong&gt; - Javascript is the programming language which helps in making the web interactive. With the development of NodeJS, JS has become a language of the web. You can make a full stack Web Application with only Javascript and many developers are adopting this technology.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Responsive Web Design&lt;/strong&gt; - Mobile is the future. The number of users of the mobiles is increasing day by day and the larger traffic on the websites is coming from mobile phones. Responsive design means that your website should adjust itself to the device from which it is being viewed and give an appealing look on most devices. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CSS Frameworks&lt;/strong&gt; - Frameworks make the responsive development easier and already contain different classes for the buttons, forms and various elements on the page. It follows industry best practices. Examples are - &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;, &lt;a href="http://foundation.zurb.com/"&gt;Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Javascript Frameworks&lt;/strong&gt; - These frameworks help in creating web application easier and follow best practices. Single Page Applications (SPAs) can be made efficiently with these frameworks. Examples are - &lt;a href="https://angularjs.org/"&gt;AngularJS&lt;/a&gt;,&lt;a href="http://emberjs.com/"&gt;Ember&lt;/a&gt;,&lt;a href="http://backbonejs.org/"&gt;Backbone&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Version Control&lt;/strong&gt; - Version Control is a must for every project. Suppose you are working on a feature in your project and you messed up something, now what you will do. With Version Control Systems (VCS) like &lt;strong&gt;git&lt;/strong&gt; you can view the changes you have made and go back to your previous state. &lt;a href="https://github.com/"&gt;Github&lt;/a&gt; is a web based hosting service for git repositories which makes collaboration between teams much easier. It gives features like forks and pull requests which helps in a big way to open source development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Web Performance&lt;/strong&gt; - You have created your awesome website but if it takes long time to load people will not wait and leave your site. So you should optimize your images, Minify css and javscript to deliever fast and efficient websites to your users.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Browser Development tools&lt;/strong&gt; - Modern browsers are not just awesome for users But they are great for developers as well. These development tools help us to make changes to the DOM on the fly and see the changes. Debugging javascript is easier with these tools.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Building and Automation tools&lt;/strong&gt; - Who wants to do boring repetitive tasks. Tasks like running tests, optimize images, minify javascript and preparing code for deploying to production server can be automated with tools like &lt;a href="http://gruntjs.com/"&gt;Grunt&lt;/a&gt;, &lt;a href="http://gulpjs.com/"&gt;gulp&lt;/a&gt;. So you can focus only on building great web Applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt; - Testing is an essential part of creating web Applications. When you are working on a new feature you want to test your project so that you had not broken anything in the process. Examples of testing frameworks are &lt;a href="http://mochajs.org/"&gt;Mocha&lt;/a&gt;, &lt;a href="http://jasmine.github.io/"&gt;Jasmine&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Soft skills&lt;/strong&gt; - Soft skills are also important as technical skills. Soft skills help to communicate our ideas effectively with others, inspire others and see the big picture. Soft Skills include Strong Comminication, Agile Problem solving, Healthy passion, Self starting motivation.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above skills are demanded by Companies hiring Front End Developers. So whether you are just starting out or an expert in this field, You should add these skills to your tool set. The following resources will be helpful to learn -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.udacity.com/" target="_blank"&gt;https://www.udacity.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codecademy.com/" target="_blank"&gt;http://www.codecademy.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/DevTipsForDesigners" target="_blank"&gt;https://www.youtube.com/user/DevTipsForDesigners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://learncode.academy/" target="_blank"&gt;http://learncode.academy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tutsplus.com/" target="_blank"&gt;http://tutsplus.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Not understand some terms in this post go ahead and search &lt;a href="http://google.com" target="_blank"&gt;Google&lt;/a&gt; and you will find a number of resources. The community is there to help you in every step of your learning. You just need to start with confidence.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Sun, 11 Jan 2015 11:00:00 +0530</pubDate><guid>tag:parbhatpuri.com,2015-01-11:skills-essential-for-a-front-end-web-developer-in-2015.html</guid><category>html</category><category>css</category><category>javascript</category><category>front-end</category><category>web</category><category>tools</category><category>2015</category></item><item><title>Why you should learn Python in 2015?</title><link>https://parbhatpuri.com/Why-you-should-learn-python-in-2015.html</link><description>&lt;p&gt;Yesterday I saw a question on Quora - &lt;a href="https://www.quora.com/Is-Python-worth-it-to-learn-as-a-programming-language"&gt;Is Python worth it to learn as a programming language?&lt;/a&gt;. I answered the question on quora and decided to write a blog post on Importance of learning Python in 2015.&lt;/p&gt;
&lt;p&gt;Happy New Year 2015. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; is the golden fish in the Programming languages world. It is being used everywhere from Scientific and Numeric to Web Programming. MIT - One of the Top universities in the world uses Python in its Introduction to Computer Science Course. It is being used by Biggest names in the industry like Google, YouTube, Quora, Pinterest, Instagram, Reddit, Redhat etc. &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python" src="https://qph.is.quoracdn.net/main-qimg-021cf0a7a590d07d95a1c37a9323a31e" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;You have a number of options after learning this powerful Programming language. It is easy to learn and code. The open source community behind Python is really awesome and working collectively to improve it. Without any further writing I will show you the importance of this language in the images below -&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-companies" src="https://qph.is.quoracdn.net/main-qimg-e27b0c82171f07ba2904f075f52ea508" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.python.org/about/apps/"&gt;Use Python for&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-percentages" src="https://qph.is.quoracdn.net/main-qimg-974814fee8bd7a7086a1912a4dd18d0d" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Jobs&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-use" src="https://qph.is.quoracdn.net/main-qimg-d58e1c9658720803fe0093c819e02415" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-graph-jobs" src="https://qph.is.quoracdn.net/main-qimg-5d66c27a5320e9576c73b8ab507089ac" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;Python is a great skill that will surely pay off in 2015. It's clean syntax gives you Super powers. &lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-xkcd" src="https://i.imgur.com/b6qQf8E.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;So go ahead and dive in the world of Python full of learning and Adventures.
&lt;br&gt;
Best learning Resource - &lt;a href="https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-0"&gt;6.00.1x introduction to computer science&lt;/a&gt; from MIT.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-keep-calm" src="https://qph.is.quoracdn.net/main-qimg-a1db30289c639d49be679a22f35bfd19" /&gt;&lt;/center&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Sun, 04 Jan 2015 23:00:00 +0530</pubDate><guid>tag:parbhatpuri.com,2015-01-04:Why-you-should-learn-python-in-2015.html</guid><category>python</category><category>2015</category><category>Programming</category></item><item><title>VirtualenvWrapper on top of Virtualenv</title><link>https://parbhatpuri.com/virtualenvwrapper-on-top-of-virtualenv.html</link><description>&lt;h2&gt;What is Virtualenv?&lt;/h2&gt;
&lt;p&gt;Virtualenv is a tool for creating isolated Python environments which means you can have separate python environments for your projects.&lt;/p&gt;
&lt;p&gt;Lets keep it simple suppose you are working on a project which depends on any python package like &lt;strong&gt;Django == 1.6.5&lt;/strong&gt;. And wow the new version &lt;strong&gt;Django == 1.7&lt;/strong&gt; is launched with some cool features like migrations etc. You want to start a new project on Django == 1.7 but wait how you are gonna do that?&lt;/p&gt;
&lt;h4&gt;How to maintain two separate versions of Django.&lt;/h4&gt;
&lt;p&gt;The answer is simple use &lt;strong&gt;Virtualenv&lt;/strong&gt; to create separate python environments for them. Those two environments will be totally separated from each other as well as from the globally installed packages.&lt;/p&gt;
&lt;h4&gt;Installing Virtualenv&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
The easiest way to install virtualenv is to use &lt;a href="http://pip.readthedocs.org/en/latest"&gt;pip&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Usage&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
&lt;strong&gt;To create a Virtual environment&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;virtualenv ENV_NAME
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt; Activate the Virtual environment&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;source &lt;/span&gt;bin/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;But wait where is &lt;strike&gt;Virtualenv&lt;/strike&gt; VirtualenvWrapper&lt;/h2&gt;
&lt;h4&gt;Virtualenv Wrapper is the Hero&lt;/h4&gt;
&lt;p&gt;virtualenvwrapper is the extension to virtualenv. It makes the process of creating and managing virtual environments smoother and easier. It provides a set of commands which helps in managing multiple environments easily and remove conflicts.&lt;/p&gt;
&lt;h4&gt;Installing Virtualenvwrapper&lt;/h4&gt;
&lt;p&gt;&lt;hr&gt;
As usual the best way to install any python package is to use pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Some configuration&lt;/strong&gt;
&lt;hr&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vi ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(maybe virtualenvwrapper.sh is in other location, change if necessary)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="x"&gt;export WORKON_HOME=&lt;/span&gt;&lt;span class="p"&gt;$&lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="x"&gt;/.virtualenvs&lt;/span&gt;
&lt;span class="x"&gt;source /usr/local/bin/virtualenvwrapper.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Load file .bashrc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;source ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Creating a Virtual Environment using Virtualenv Wrapper&lt;/h4&gt;
&lt;hr&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;mkvirtualenv env_name
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;center&gt;&lt;div class="imga"&gt;&lt;img src="https://i.imgur.com/eCXWgI8.png"&gt;&lt;/div&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Activating the Virtual environment&lt;/h4&gt;
&lt;hr&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;workon env_name
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can see the changes before the username. This indicates that your virtual
environment is activated.&lt;/p&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="virtualenv" src="https://i.imgur.com/MytTSyR.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Installing and listing packages using pip&lt;/h4&gt;
&lt;hr&gt;

&lt;p&gt;&lt;center&gt;&lt;img alt="virtualenv" src="https://i.imgur.com/v0iftDF.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;h4&gt;Deactivate Environment&lt;/h4&gt;
&lt;hr&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Great we have come to the end of this post.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;virtualenv is a great tool for any python project and virtualenvwrapper makes the process easier. For more details refer to their Official Documentation - &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://virtualenv.readthedocs.org/en/latest/"&gt;http://virtualenv.readthedocs.org/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest"&gt;http://virtualenvwrapper.readthedocs.org/en/latest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Oh I forget something&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pip install have-a-great-development
&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Thu, 27 Nov 2014 20:00:00 +0530</pubDate><guid>tag:parbhatpuri.com,2014-11-27:virtualenvwrapper-on-top-of-virtualenv.html</guid><category>python</category><category>virtualenv</category><category>Programming</category></item><item><title>Why use Linux for Python development?</title><link>https://parbhatpuri.com/why-use-linux-for-python-development.html</link><description>&lt;p&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt; is a high level programming language. The development time is precious so using Linux based operating systems makes the development easier and fun.&lt;/p&gt;
&lt;p&gt;I had been using windows for a couple of months for my &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; Projects. Initially during my learning stage windows was working fine for me but as the knowledge and project size grew I faced many difficulties which I want to summarize here. I am not supporting any operating system here but want every Developer to understand the reasons for switching. For following reasons every Developer should switch to Linux based OS like &lt;a href="http://www.ubuntu.com/"&gt;Ubuntu&lt;/a&gt; for Python Development.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Some packages are &lt;strong&gt;not&lt;/strong&gt; available for windows, if they are available it will be difficult to configure them in your projects.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are working on a project in Django, flask and other frameworks you would like to &lt;strong&gt;deploy&lt;/strong&gt; it so it will be available for public to see. In more than 90% of the cases your deployment environment will be Linux based so its best to test your application locally on the same environment as in deployment because here you are allowed to make mistakes and improve.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Almost every tutorial on Python use Linux based systems like Ubuntu. These tutorials are by experts so it's good to follow best practices used by experienced developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When your projects get complex its very easy to find Dependencies for your projects like extensions, libraries etc. in Linux based OS. In Windows you have to search for the right site to download the package and go through the hassle of installation and configuration. Sometimes the search for packages takes a lot of time, in Linux its just &lt;em&gt;&lt;strong&gt;"apt-get"&lt;/strong&gt;&lt;/em&gt; (or similar).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python comes pre-installed in Ubuntu and other versions so no need to install python on your system.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;center&gt;&lt;img alt="python-linux" src="https://i.imgur.com/lhlh6Lx.png" /&gt;&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Switch to linux and use apt-get to install your packages&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Happy Coding.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Sat, 22 Nov 2014 19:40:00 +0530</pubDate><guid>tag:parbhatpuri.com,2014-11-22:why-use-linux-for-python-development.html</guid><category>python</category><category>linux</category><category>windows</category><category>ubuntu</category><category>Programming</category></item><item><title>Django (Python Web Framework) Tutorials</title><link>https://parbhatpuri.com/django_tutorials.html</link><description>&lt;h2&gt;Django Tutorials&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;&lt;a href="https://www.djangoproject.com" target="_blank"&gt;Django&lt;/a&gt; is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/1.6/intro/tutorial01/" target="_blank"&gt;Official Tutorial &lt;/a&gt; - It is the Official tutorial of django on the django site.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.tangowithdjango.com/" target="_blank"&gt;Tango with Django&lt;/a&gt; - A Good Introduction to the django terminology.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://gettingstartedwithdjango.com" target="_blank"&gt;Getting Started With Django&lt;/a&gt; - A video series to upgrade  from beginner to pro.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://twoscoopspress.org" target="_blank"&gt;Two Scoops of Django&lt;/a&gt; - A book covering the best practices in Django.&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Parbhat Puri</dc:creator><pubDate>Fri, 18 Jul 2014 19:30:00 +0530</pubDate><guid>tag:parbhatpuri.com,2014-07-18:django_tutorials.html</guid><category>python</category><category>django</category><category>web</category></item></channel></rss>